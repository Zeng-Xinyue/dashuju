import React, { useEffect, useRef } from "react";
import { Card } from 'antd'
import * as echarts from 'echarts';

const OrderAnalysis = () => {
  const chartRef = useRef(null);
useEffect(()=>{

  var option;

  // prettier-ignore
  const hours = [
      "	1-s	1	"	,
  "	1-s	2	"	,
  "	1-s	3	"	,
  "	1-s	4	"	,
  "	2-s	1	"	,
  "	2-s	2	"	,
  "	2-s	3	"	,
  "	2-s	4	"	,
  "	3-s	1	"	,
  "	3-s	2	"	,
  "	3-s	3	"	,
  "	3-s	4	"	,
  "	4-s	1	"	,
  "	4-s	2	"	,
  "	4-s	3	"	,
  "	4-s	4	"

  ];
  // prettier-ignore
  const days = [
     "	Africa	"	,
  "	Canada	"	,
  "	Caribbean	"	,
  "	Central	"	,
  "	Central Asia	"	,
  "	EMEA	"	,
  "	East	"	,
  "	North	"	,
  "	North Asia	"	,
  "	Oceania	"	,
  "	South	"	,
  "	Southeast Asia	"	,
  "	West	"	,

  ];
  // prettier-ignore
  const data = [[0, 0, 25555.59], [0, 1, 22675.137], [0, 2, 33136.254], [0, 3, 45820.293], [0, 4, 26518.23], [0, 5, 29168.145], [0, 6, 40937.22], [0, 7, 47857.11], [0, 8, 44850.366], [0, 9, 52877.328], [0, 10, 67911.504], [0, 11, 63429.594], [0, 12, 65948.817], [0, 13, 79252.419], [0, 14, 58699.878], [0, 15, 79135.326], [1, 0, 4241.46], [1, 1, 541.62], [1, 2, 2972.19], [1, 3, 753.84], [1, 4, 1952.01], [1, 5, 6517.23], [1, 6, 4823.07], [1, 7, 2804.49], [1, 8, 4638.69], [1, 9, 2327.4], [1, 10, 6173.97], [1, 11, 6021.09], [1, 12, 6856.86], [1, 13, 1630.71], [1, 14, 4978.59], [1, 15, 9694.95], [2, 0, 5578.41392], [2, 1, 16056.0134], [2, 2, 15262.78336], [2, 3, 20146.21828], [2, 4, 11974.89888], [2, 5, 19875.33632], [2, 6, 10038.85384], [2, 7, 22258.48788], [2, 8, 14373.08944], [2, 9, 28877.96416], [2, 10, 18272.55504], [2, 11, 36074.69072], [2, 12, 17416.66264], [2, 13, 20355.68492], [2, 14, 28942.34996], [2, 15, 38776.85828], [3, 0, 108585.3412], [3, 1, 99521.15204], [3, 2, 166639.9384], [3, 3, 142755.5123], [3, 4, 99774.7012], [3, 5, 147258.1477], [3, 6, 184862.8173], [3, 7, 170149.4609], [3, 8, 142107.9744], [3, 9, 212906.9191], [3, 10, 172827.3607], [3, 11, 235872.8791], [3, 12, 197887.6573], [3, 13, 198568.9282], [3, 14, 223727.9457], [3, 15, 318855.7843], [4, 0, 23727.774], [4, 1, 28556.07], [4, 2, 23707.395], [4, 3, 47246.787], [4, 4, 38740.326], [4, 5, 48631.176], [4, 6, 32908.323], [4, 7, 53853.576], [4, 8, 31620.669], [4, 9, 37783.701], [4, 10, 58846.995], [4, 11, 68063.517], [4, 12, 56511.831], [4, 13, 53454.141], [4, 14, 74323.884], [4, 15, 74850.402], [5, 0, 37316.922], [5, 1, 31507.884], [5, 2, 38644.164], [5, 3, 28951.35], [5, 4, 37709.874], [5, 5, 46810.302], [5, 6, 41302.743], [5, 7, 37591.446], [5, 8, 46034.91], [5, 9, 51311.712], [5, 10, 49209.798], [5, 11, 58084.263], [5, 12, 62909.214], [5, 13, 65861.337], [5, 14, 87879.201], [5, 15, 85036.191], [6, 0, 13420.022], [6, 1, 26513.066], [6, 2, 29621.869], [6, 3, 59125.5], [6, 4, 24499.273], [6, 5, 28519.299], [6, 6, 61541.777], [6, 7, 41771.708], [6, 8, 36877.388], [6, 9, 53869.932], [6, 10, 39890.589], [6, 11, 49891.401], [6, 12, 34923.973], [6, 13, 34928.207], [6, 14, 64112.503], [6, 15, 79274.733], [7, 0, 28370.82508], [7, 1, 46360.93712], [7, 2, 60283.95644], [7, 3, 77922.15856], [7, 4, 46138.88936], [7, 5, 80815.25696], [7, 6, 80202.04444], [7, 7, 93074.78124], [7, 8, 61611.50096], [7, 9, 73120.25864], [7, 10, 86594.34916], [7, 11, 84506.87604], [7, 12, 76054.07652], [7, 13, 115218.2954], [7, 14, 110996.5464], [7, 15, 126894.8503], [8, 0, 46732.752], [8, 1, 35611.317], [8, 2, 43119.996], [8, 3, 69062.598], [8, 4, 37326.165], [8, 5, 30412.236], [8, 6, 37798.995], [8, 7, 46819.935], [8, 8, 35858.37], [8, 9, 60646.758], [8, 10, 76534.842], [8, 11, 63825.486], [8, 12, 63398.499], [8, 13, 61277.337], [8, 14, 59253.948], [8, 15, 80630.547], [9, 0, 34185.387], [9, 1, 33820.401], [9, 2, 64617.291], [9, 3, 38795.481], [9, 4, 57150.939], [9, 5, 58345.071], [9, 6, 58574.868], [9, 7, 75994.794], [9, 8, 51452.361], [9, 9, 82167.414], [9, 10, 77159.598], [9, 11, 105491.121], [9, 12, 53953.767], [9, 13, 114678.753], [9, 14, 81275.961], [9, 15, 112521.405], [10, 0, 73804.85784], [10, 1, 65594.46416], [10, 2, 67253.76454], [10, 3, 77389.10948], [10, 4, 65712.50772], [10, 5, 83929.19746], [10, 6, 74268.85344], [10, 7, 104094.9528], [10, 8, 92646.53072], [10, 9, 113362.1687], [10, 10, 112399.4686], [10, 11, 125235.0566], [10, 12, 86406.06744], [10, 13, 117463.0584], [10, 14, 163300.8703], [10, 15, 178046.1127], [11, 0, 25228.461], [11, 1, 35363.0172], [11, 2, 38523.033], [11, 3, 50947.4952], [11, 4, 30512.8305], [11, 5, 46269.6111], [11, 6, 45548.067], [11, 7, 63832.4178], [11, 8, 40114.0761], [11, 9, 63277.1199], [11, 10, 59373.0723], [11, 11, 62365.7556], [11, 12, 70947.963], [11, 13, 67045.9866], [11, 14, 86625.1707], [11, 15, 98449.092], [12, 0, 17919.029], [12, 1, 24197.552], [12, 2, 52713.455], [12, 3, 53052.997], [12, 4, 39060.128], [12, 5, 29168.8855], [12, 6, 29823.91], [12, 7, 41913.326], [12, 8, 25883.837], [12, 9, 46324.98], [12, 10, 49222.4325], [12, 11, 65544.767], [12, 12, 66930.408], [12, 13, 49773.7515], [12, 14, 72723.073], [12, 15, 61205.293]]
      .map(function (item) {
      return [item[1], item[0], item[2] || '-'];
  });
  option = {
    tooltip: {
      position: 'top'
    },
    grid: {
      height: '50%',
      top: '10%'
    },
    xAxis: {
      type: 'category',
      data: hours,
      splitArea: {
        show: true
      }
    },
    yAxis: {
      type: 'category',
      data: days,
      splitArea: {
        show: true
      }
    },
    visualMap: {
      min: 0,
      max: 318855.7843,
      calculable: true,
      orient: 'horizontal',
      left: 'center',
      bottom: '15%'
    },
    series: [
      {
        name: 'Punch Card',
        type: 'heatmap',
        data: data,
        label: {
          show: false
        },
        emphasis: {
          itemStyle: {
            shadowBlur: 10,
            shadowColor: 'rgba(0, 0, 0, 0.5)'
          }
        }
      }
    ]
  };

  const chartDom = chartRef.current;
  const myChart = echarts.init(chartDom);
   myChart.setOption(option);

},[])

const chartRef1 = useRef(null);

useEffect(()=>{

// Generate data
let category = [
  '	2011-01-01 ',
  '	2011-02-01 	',
  '	2011-03-01 	',
  '	2011-04-01 	',
  '	2011-05-01 	',
  '	2011-06-01 	',
  '	2011-07-01 	',
  '	2011-08-01 	',
  '	2011-09-01 	',
  '	2011-10-01 	',
  '	2011-11-01 	',
  '	2011-12-01 	',
  '	2012-01-01 	',
  '	2012-02-01 	',
  '	2012-03-01 	',
  '	2012-04-01 	',
  '	2012-05-01 	',
  '	2012-06-01 	',
  '	2012-07-01 	',
  '	2012-08-01 	',
  '	2012-09-01 	',
  '	2012-10-01 	',
  '	2012-11-01 	',
  '	2012-12-01 	',
  '	2013-01-01 	',
  '	2013-02-01 	',
  '	2013-03-01 	',
  '	2013-04-01 	',
  '	2013-05-01 	',
  '	2013-06-01 	',
  '	2013-07-01 	',
  '	2013-08-01 	',
  '	2013-09-01 	',
  '	2013-10-01 	',
  '	2013-11-01 	',
  '	2013-12-01 	',
  '	2014-01-01 	',
  '	2014-02-01 	',
  '	2014-03-01 	',
  '	2014-04-01 	',
  '	2014-05-01 	',
  '	2014-06-01 	',
  '	2014-07-01 	',
  '	2014-08-01 	',
  '	2014-09-01 	',
  '	2014-10-01 	',
  '	2014-11-01 	',
  '	2014-12-01 	'
];

let lineData = [
  104353.4008, 133162.4485, 174029.5493, 117687.3625, 157433.5022, 188410.561,
  152969.2448, 203765.6384, 240607.3724, 195358.6381, 256738.0453, 297859.7931,
  166003.049, 142380.3564, 176137.0032, 186124.2892, 215077.0159, 246608.6852,
  193778.4191, 264664.8829, 270407.4542, 245097.6579, 272702.0887, 29036.55338,
  250465.026, 182763.2647, 217481.1069, 255099.026, 245319.5612, 341029.5173,
  256672.6741, 316592.9599, 366298.311, 299963.3389, 312757.7994, 634033.2195,
  298169.2174, 245496.2173, 328361.2559, 33033.29958, 32720.51578, 378397.9514,
  31661.07836, 46544.46906, 421006.279, 367932.8979, 505030.2692, 434141.8278,
  16136.11314, 19079.2167, 10274.7609, 9346.72358, 4031.09, 951.2508, 318.66
];
let barData = [
  11342.33, 14544.45, 17923.04, 13832.89, 16807.17, 21198.84, 14990.79,
  21120.51, 27518.35, 22073.99, 27904.03, 31639.23, 16853.35, 15285.45,
  16956.94, 19511.12, 25106.84, 26848.52, 22758.23, 27977.45, 27236.7, 24568.77,
  27674.14, 32686.25, 26788.21, 19465.58, 23814.43, 26882.45, 25859.1, 36910.65,
  28919.72, 35419.25, 36745.91, 31347.44, 34952.33, 36347.5, 32259.16, 25632.53,
  34820.06, 32630.44, 32368.22, 39347.02, 35047.92, 42386.76, 44379.74,
  38121.66, 54729.85, 47296.3, 1966.18, 1879.31, 1164.59, 569.19, 326.7, 60.98,
  22.13
];
// option
const option1 = {
  backgroundColor: '#0f375f',
  tooltip: {
    trigger: 'axis',
    axisPointer: {
      type: 'shadow'
    }
  },
  legend: {
    data: ['Sales', 'Ship Cost'],
    textStyle: {
      color: '#ccc'
    }
  },
  xAxis: {
    data: category,
    axisLine: {
      lineStyle: {
        color: '#ccc'
      }
    },
    axisLabel:{
      rotate:35,

    }
  },
  yAxis: {
    splitLine: { show: false },
    axisLine: {
      lineStyle: {
        color: '#ccc'
      }
    }
  },
  series: [
    {
      name: 'Sales',
      type: 'line',
      smooth: true,
      showAllSymbol: true,
      symbol: 'emptyCircle',
      symbolSize: 15,
      data: lineData
    },
    {
      name: 'Ship Cost',
      type: 'bar',
      barWidth: 10,
      itemStyle: {
        borderRadius: 5,
        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
          { offset: 0, color: '#14c8d4' },
          { offset: 1, color: '#43eec6' }
        ])
      },
      data: barData
    },
    {
      name: 'Sales',
      type: 'bar',
      barGap: '-100%',
      barWidth: 10,
      itemStyle: {
        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
          { offset: 0, color: 'rgba(20,200,212,0.5)' },
          { offset: 0.2, color: 'rgba(20,200,212,0.2)' },
          { offset: 1, color: 'rgba(20,200,212,0)' }
        ])
      },
      z: -12,
      data: lineData
    },
    {
      name: 'Sales',
      type: 'pictorialBar',
      symbol: 'rect',
      itemStyle: {
        color: '#0f375f'
      },
      symbolRepeat: true,
      symbolSize: [12, 4],
      symbolMargin: 1,
      z: -10,
      data: lineData
    }
  ]
};
  const chartDom1 = chartRef1.current;
  const myChart1 = echarts.init(chartDom1);
   myChart1.setOption(option1);
},[])
  return<> <Card bordered={false} title="销售金额淡旺季分析">
    <div ref={chartRef} style={{ width: '100%', height: '800px' }}></div>
  </Card>
  <Card bordered={false} title="Sales and Ship Cost">
    <div ref={chartRef1} style={{ width: '100%', height: '800px' }}></div>
  </Card>
  </>
}

export default OrderAnalysis;
